{"version":3,"file":"static/js/962.20c0fff5.chunk.js","mappings":"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","sources":["components/HeroSection.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport styled from 'styled-components';\nimport { device } from '../styles/breakpoint';\nimport { useTheme } from '../ThemeContext';\nimport { Link } from 'react-router-dom';\nconst StyledLink = styled(Link)`\n  color: ${({ theme }) => theme.text};\n  margin: 0 1rem;\n  text-decoration: none;\n\n  @media ${device.mobile} {\n    margin: 0.5rem 0;\n  }\n`;\nconst HeroSection = () => {\n  const { theme } = useTheme(); // 'light' or 'dark'\n  const [backgroundColor, setBackgroundColor] = useState('#ffffff'); // Default light background\n  const [textColor, setTextColor] = useState('#000000'); // Default light text color\n\n  // Generate colors based on the theme\n  const generateColors = () => {\n    const lightColors = ['#4a90e2', '#f39c12', '#2ecc71', '#e74c3c', '#9b59b6']; // Bright colors for light theme\n    const darkColors = ['#34495e', '#7f8c8d', '#c0392b', '#27ae60', '#8e44ad']; // Darker colors for dark theme\n    return theme === 'light' ? lightColors : darkColors;\n  };\n\n  const updateDynamicStyles = () => {\n    const colors = generateColors();\n    const randomIndex = Math.floor(Math.random() * colors.length);\n    const selectedColor = colors[randomIndex];\n    setBackgroundColor(selectedColor);\n    setTextColor(theme === 'light' ? '#000' : '#fff'); // Text color based on theme\n  };\n\n  useEffect(() => {\n    updateDynamicStyles();\n  }, [theme]);\n\n  return (\n    <Hero backgroundColor={backgroundColor} textColor={textColor}>\n      <CanvasContainer>\n        <Canvas>\n          <ambientLight intensity={0.5} />\n          <pointLight position={[10, 10, 10]} />\n          <DynamicShapes colors={generateColors()} />\n          <OrbitControls enableZoom={false} enablePan={false} />\n        </Canvas>\n      </CanvasContainer>\n      <HeroContent>\n        <h1>Welcome to My Portfolio</h1>\n        <p>Full Stack Developer | Automotive Enthusiast | Problem Solver</p>\n        <StyledLink to=\"/contact\">Contact Me</StyledLink>\n      </HeroContent>\n    </Hero>\n  );\n};\n\n// Dynamic Shapes Component\nconst DynamicShapes = ({ colors }) => {\n  const shapes = generateShapes(15, colors);\n\n  return (\n    <>\n      {shapes.map((shape, index) => (\n        <DynamicShape\n          key={index}\n          position={shape.position}\n          size={shape.size}\n          color={shape.color}\n          type={shape.type}\n        />\n      ))}\n    </>\n  );\n};\n\n// Generate Random Shapes\nconst generateShapes = (count, colors) => {\n  const shapes = [];\n  for (let i = 0; i < count; i++) {\n    const position = [\n      Math.random() * 10 - 5,\n      Math.random() * 10 - 5,\n      Math.random() * 10 - 5,\n    ];\n    const size = Math.random() * 1.5 + 0.5;\n    const type = Math.random() > 0.5 ? 'box' : 'sphere';\n    const color = colors[Math.floor(Math.random() * colors.length)]; // Only use theme-specific colors\n\n    shapes.push({ position, size, type, color });\n  }\n  return shapes;\n};\n\n// Dynamic Shape Component\nconst DynamicShape = ({ position, size, color, type }) => {\n  const ref = useRef();\n\n  useFrame(() => {\n    if (ref.current) {\n      ref.current.rotation.x += 0.01;\n      ref.current.rotation.y += 0.01;\n    }\n  });\n\n  return (\n    <mesh ref={ref} position={position}>\n      {type === 'box' ? (\n        <boxGeometry args={[size, size, size]} />\n      ) : (\n        <sphereGeometry args={[size / 2, 32, 32]} />\n      )}\n      <meshStandardMaterial color={color} />\n    </mesh>\n  );\n};\n\nconst Hero = styled.section`\n  position: relative;\n   user-select: none;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  text-align: center;\n  background-color: ${({ backgroundColor }) => backgroundColor};\n  color: ${({ textColor }) => textColor};\n  transition: background-color 0.5s ease, color 0.5s ease;\n\n  @media ${device.mobile} {\n    padding: 1rem;\n  }\n`;\n\nconst CanvasContainer = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 0;\n`;\n\nconst HeroContent = styled.div`\n  z-index: 1;\n  position: relative;\n\n  h1 {\n    font-size: 2.5rem;\n\n    @media ${device.mobile} {\n      font-size: 2rem;\n    }\n  }\n\n  p {\n    font-size: 1rem;\n\n    @media ${device.mobile} {\n      font-size: 0.9rem;\n    }\n  }\n`;\n\nconst HeroButton = styled.a`\n  display: inline-block;\n  margin-top: 1rem;\n  padding: 0.5rem 1rem;\n  background: white;\n  color: black;\n  text-decoration: none;\n  border-radius: 5px;\n  transition: background 0.3s ease;\n\n  &:hover {\n    background: #eee;\n  }\n\n  @media ${device.mobile} {\n    padding: 0.4rem 0.8rem;\n  }\n`;\n\nexport default HeroSection;"],"names":["StyledLink","styled","Link","_ref","theme","text","device","mobile","DynamicShapes","_ref2","colors","shapes","generateShapes","_jsx","_Fragment","children","map","shape","index","DynamicShape","position","size","color","type","count","i","Math","random","floor","length","push","_ref3","ref","useRef","useFrame","current","rotation","x","y","_jsxs","args","Hero","section","_ref4","backgroundColor","_ref5","textColor","CanvasContainer","div","HeroContent","a","HeroSection","useTheme","setBackgroundColor","useState","setTextColor","generateColors","useEffect","updateDynamicStyles","selectedColor","Canvas","intensity","OrbitControls","enableZoom","enablePan","to"],"sourceRoot":""}